// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  //url      = env("HEROKU_POSTGRESQL_COBALT_URL")
  url      = env("DATABASE_URL")
}

model User {

    id String @id @default(uuid())
    name String
    email String
    password String
    created_at String
    updated_at String

    permission Permission @relation(fields: [permission_id], references: [id])
    @@map("usuarios")

    permission_id String
    repor_id Repor[]

}


//ALTER TABLE usuarios ADD permission_id VARCHAR(20) NULL

model Permission {

    id String @id @default(uuid())
    description String 

    @@map("permissao")

    user User[]

    
}


model Repor {

    id String @id @default(uuid())
    amount BigInt
    price String
    sales Float 
    created_at String

    user User @relation(fields: [user_id], references: [id])
    order Order @relation(fields: [order_id], references: [id])
    item Item @relation(fields: [item_id], references: [id])
    
    @@map("relatorio")

    user_id String
    order_id String
    item_id String

}


model Category {

    id String @id @default(uuid())
    name String

    @@map("categorias")

    products Product[]

}

model Product {

    id String @id @default(uuid())
    name String
    price String
    description String
    banner String
   // prepare Boolean @default(false)

    category Category @relation(fields: [category_id], references: [id])

    @@map("produtos")

    category_id String
    item Item[] // um produto pode estar dentro de varios items

}

model Order { // lado 1 de muitos na relacão

    id String @id @default(uuid())
    table Int
    status Boolean @default(false)
    draft Boolean @default(true)
    name String?
    created_at String

    @@map("pedidos")

    item Item[]
    repor Repor[]
}

model Item { // lado muitos na relacão

    id String @id @default(uuid())
    amount Int
    preparation Boolean @default(false)

    order Order @relation(fields: [ordem_id], references: [id])
    product Product @relation(fields: [product_id], references: [id])// item tem varios produtos

    @@map("itens")

    ordem_id String
    product_id String

    repor Repor[]

}

model Menu {

    id String @id @default(uuid())
    menu_product String
    created_at String

    @@map("cardapio")
}


model Commission {

    id String @id @default(uuid())
    valor_commission Float
    total_commission Float
    user_id String
    creatd_at String

    commission valor_commission @relation(fields: [commission_id], references: [id])

    @@map("comissao")

    commission_id String 
}

model valor_commission {

    id String @id @default(uuid())
    valor Float
    creatd_at String

    @@map("valor_comisao")

    commission Commission[]
}
